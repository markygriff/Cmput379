Mark Griffith - 1422270


Project Status:

Currently, my a2rchat program has all of the functionality
specified in the assignment outline for phase 1 of assignment 2.

There are no current bugs to report.




Client: ./a2rchat -c fifo-name

- The clients have the ability to open a chat session. Any chat message
  sent to the chat session is echoed back by the server of the chat
  session.
- The in-fifo is locked by the client when the chat session starts
  and is unlocked (closed) when the chat session ends.
- The chat session is composed of a read process and a write process.
- Terminated by typing 'exit'.



Server: ./a2rchat -s fifo-name nclients

- The server can read from the in fifos and write to the accompanying out fifos.
- It spawns a child process for polling the stdin (for the exit command) using 'fgets'
- Uses a custom struct to keep track of client usernames and if they are connected
  to a chat session
- I am using the NONBLOCK flag for server RDONLY opens. This is because the server
  must check each in-fifo for incoming data to read and being blocked on one read
  would mean the server couldn't read the other in-fifos. The select command
  is used to check each fifo for data before reading.
- Terminated by typing 'exit'.



Some things to note:
  - The creation of fifos is done within a function called create_fifos()
  - If there is no server present, the client cannot open a chat session.
  - The creation of the fifos is handled by the server
  - The deletion of fifos is handled by the 'make clean' command of the Makefile
  - The maximum buffer size is defined at the top of the file. Currently, it
    is set to 1024.
  - The server has a timeout = 0.1 seconds on all of its select() calls.
  - The client prompt is delayed by .15 seconds every iteration to allow
    time for the server to print.
  - There is a debug print macro that is activated by defining 'DEBUG'.
